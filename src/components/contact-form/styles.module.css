.form {
  display: grid;
  justify-items: center;
  max-width: none !important; 
  background-image: url('/assets/images/wall-texture.webp');
  background-size: auto;
  overflow: hidden;
  padding: 2em 0.5em;
  border-radius: var(--border-radius);
  position: relative;
  z-index: 0;

  &::before{
  position: absolute;
  content: "";
  inset: 0;
  background-image: linear-gradient(rgba(166, 153, 148, 0.65),rgba(166, 153, 148, 0.65)); 
  z-index: -2;
  }

& label {
    position: relative;
    cursor: pointer;
    font-weight: var(--fw-semi-bold);
}

& :is(input, textarea) {
  box-shadow:
  inset 1px 1px 3px rgba(0,0,0,0.08),
  inset -1px -1px 2px rgba(255,255,255,0.4);
  transition: box-shadow 0.25s ease-in-out;
  border: 2px solid transparent;
  border-radius: 12px;
  background-color: var(--background);
  cursor: pointer;
}

  & :is(input:hover:not(:focus), textarea:hover:not(:focus)) {
    outline: none;
    box-shadow:
    inset 2px 2px 4px rgba(0, 0, 0, 0.15),
    inset -1px -1px 3px rgba(255, 255, 255, 0.2);
    background-color: #e2ddd8;
    font-weight: var(--fw-semi-bold);
    color: #222;
  }

    & :is(input:focus, textarea:focus) {
    outline: none;
    background-color: #d8d2cc;
    box-shadow:
    inset 4px 4px 8px rgba(0, 0, 0, 0.25),
    inset -2px -2px 4px rgba(255, 255, 255, 0.15);
    font-weight: var(--fw-semi-bold);
    color: #222;
  }
  
  & button {    
    margin-top: 6em;
    width: 90%;
    transition: 
    transform 0.2s ease-in-out,
    box-shadow 0.25s ease-in-out,
    background-image 0.3s ease;
    
    &:hover {
      transform: none;
      box-shadow: none;
    }   
    
    &:not(.disable):hover {
    transform: translateY(-2px); 
    box-shadow:
    inset 2px 2px 4px rgba(0,0,0,0.2),
    inset -1px -1px 2px rgba(255,255,255,0.2);  
    }
    

    &:focus {
    outline: none;
    background-color: #c3bdb7;
    box-shadow:
    inset 4px 4px 8px rgba(0, 0, 0, 0.25),
    inset -2px -2px 4px rgba(255, 255, 255, 0.2);
    transform: scale(0.98);
    }
  }
  
  /* states messages */
  & p {
    margin-top: 0.5em;
    font-size: 1rem;
    font-weight: var(--fw-semi-bold);
    color: red;
  }

  & .success {
    margin-top: 2em;
    margin-left: 2em;
    color: rgb(38, 116, 2);
}

  & .failure {
      margin-left: 2em;
  }

  & span {
    font-weight: var(--fw-semi-bold);
    color: rgb(255, 0, 0, 0.9);
    
  }

  & input {
    margin-top: 0.5em;
    width: 100%;
    padding: 1em 1em 0.5em;
  }

  /* textarea container */
  & > div {
    width: 90%;
    min-height: 400px;
  }

  /* Textarea position */
  & textarea {
    margin-top: 0.5em;
    width: 100%;
    height: 78.45%;
    padding: 1em;

    /* error message transparent if focus on the textarea */
    & ~ p {
      color: rgba(255, 0, 0, 0);
    }

    &:not(:focus) ~ p {
      color: red;
    }
  }

  /* inputs container */
  & fieldset {
    width: 90%;
    border: none;

  /* error message transparent if focus on the input */
    & p {
      color: rgba(255, 0, 0, 0);
    }

    & div {
      height: 7em;    
      display: flex;
      flex-direction: column;
      margin-bottom: 1.5em;
    }

    & label {
      order: -1;
    }


    & label.invalid::after {
    position: absolute;
    text-align: end;
    inset: 0;
    top: clamp(175%, 10vw, 180%);
    right: 1em;
    z-index: 2;
    content: '✕';
    font-size: 1rem;
    color: red;
    }



    input:not(:placeholder-shown) ~ .valid::after {
    position: absolute;
    text-align: end;
    inset: 0;
    top: clamp(174%, 10vw, 180%);
    right: 1em;
    z-index: 2;
    content: '✓';
    color: green;
    } 

    & input:not(:focus) ~ p {
      color: red;
    }
  }
}

.disable {
  opacity: 0.7;
  cursor: not-allowed;
}

.textareaError {
  position: absolute;
}

@media(min-width: 935px) {
  .form {
    grid-template-columns: 1fr 1fr;

  & button {
    margin-top: 3em;
    grid-column: 1 / -1 ; 
    width: 95%;
  }

  & .success {
    grid-column: 1 / -1 ;
  }

  & .failure {
    grid-column: 1 / -1 ;
  }
  }
} 
