.form {
  display: grid;
  justify-items: center;
  max-width: none !important; 
  background-image: url('/assets/images/wall-texture.webp');
  background-size: auto;
  overflow: hidden;
  padding: 2em 0.5em;
  border-radius: var(--border-radius);
  position: relative;
  z-index: 0;
}

.form::before{
  position: absolute;
  content: "";
  inset: 0;
  background-image: linear-gradient(rgba(166, 153, 148, 0.65),rgba(166, 153, 148, 0.65)); 
  z-index: -2;
}

.form label {
  position: relative;
  cursor: pointer;
  font-weight: var(--fw-semi-bold);
}

.form :is(input, textarea) {
  box-shadow:
  inset 1px 1px 3px rgba(0,0,0,0.08),
  inset -1px -1px 2px rgba(255,255,255,0.4);
  transition: box-shadow 0.25s ease-in-out;
  border: 2px solid transparent;
  border-radius: 12px;
  background-color: var(--background);
  cursor: pointer;
}

.form :is(input:hover:not(:focus), textarea:hover:not(:focus)) {
  outline: none;
  box-shadow:
    inset 2px 2px 4px rgba(0, 0, 0, 0.15),
    inset -1px -1px 3px rgba(255, 255, 255, 0.2);
  background-color: #e2ddd8;
  font-weight: var(--fw-semi-bold);
  color: #222;
}

.form :is(input:focus, textarea:focus) {
  outline: none;
  background-color: #d8d2cc;
  box-shadow:
    inset 4px 4px 8px rgba(0, 0, 0, 0.25),
    inset -2px -2px 4px rgba(255, 255, 255, 0.15);
  font-weight: var(--fw-semi-bold);
  color: #222;
}
  
.form button {    
  margin-top: 6em;
  width: 90%;
  transition: 
    transform 0.2s ease-in-out,
    box-shadow 0.25s ease-in-out,
    background-image 0.3s ease;
}

.form button:hover {
  transform: none;
  box-shadow: none;
}   
    
.form button:not(.disable):hover {
  transform: translateY(-2px); 
  box-shadow:
    inset 2px 2px 4px rgba(0,0,0,0.2),
    inset -1px -1px 2px rgba(255,255,255,0.2);  
}
    
.form button:focus {
  outline: none;
  background-color: #c3bdb7;
  box-shadow:
    inset 4px 4px 8px rgba(0, 0, 0, 0.25),
    inset -2px -2px 4px rgba(255, 255, 255, 0.2);
  transform: scale(0.98);
}
  
  
/* states messages */
.form p {
  margin-top: 0.5em;
  font-size: 1rem;
  font-weight: var(--fw-semi-bold);
  color: red;
  }

.form .success {
  margin-top: 2em;
  margin-left: 2em;
  color: rgb(38, 116, 2);
}

.form .failure {
  margin-left: 2em;
}

.form span {
  font-weight: var(--fw-semi-bold);
  color: rgb(255, 0, 0, 0.9);   
}

.form input {
  margin-top: 0.5em;
  width: 100%;
  padding: 1em 1em 0.5em;
}

/* textarea container */
.form > div {
  width: 90%;
  min-height: 400px;
}

/* Textarea position */
.form textarea {
  margin-top: 0.5em;
  width: 100%;
  height: 78.45%;
  padding: 1em;
}

  /* error message transparent if focus on the textarea */
.form textarea ~ p {
  color: rgba(255, 0, 0, 0);
}

.form textarea:not(:focus) ~ p {
  color: red;
}
  
/* inputs container */
.form fieldset {
  width: 90%;
  border: none;
}
/* error message transparent if focus on the input */
.form fieldset p {
  color: rgba(255, 0, 0, 0);
}

.form fieldset div {
    height: 7em;    
    display: flex;
    flex-direction: column;
    margin-bottom: 1.5em;
}

.form fieldset label {
  order: -1;
}

.form fieldset label.invalid::after {
  position: absolute;
  text-align: end;
  inset: 0;
  top: clamp(175%, 10vw, 180%);
  right: 1em;
  z-index: 2;
  content: '✕';
  font-size: 1rem;
  color: red;
}

.form input:not(:placeholder-shown) ~ .valid::after {
    position: absolute;
    text-align: end;
    inset: 0;
    top: clamp(174%, 10vw, 180%);
    right: 1em;
    z-index: 2;
    content: '✓';
    color: green;
} 

.form fieldset input:not(:focus) ~ p {
  color: red;
}

.disable {
  opacity: 0.6;
  cursor: not-allowed;
}

.textareaError {
  position: absolute;
}

@media(min-width: 935px) {
  .form {
    grid-template-columns: 1fr 1fr;
  }
  .form button {
    margin-top: 3em;
    grid-column: 1 / -1 ; 
    width: 95%;
  }

  .form .success {
    grid-column: 1 / -1 ;
  }

  .form .failure {
    grid-column: 1 / -1 ;
  }
  
} 
