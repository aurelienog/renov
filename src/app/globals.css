:root {
  scroll-behavior: smooth;
  interpolate-size: allow-keywords;
}

/* reset */
*, 
*::before, 
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

/* layout */
:is(html, body) {
  max-width: 100vw;
  overflow-wrap: break-word;
}

.base-layout > :not(.breakout, .full-width) {
  grid-column: content;
}

.base-layout > .breakout {
  grid-column: breakout;
}

.base-layout > .full-width {
  grid-column: full-width;
}

.base-layout {
  --padding-inline: 2rem;
  --content-max-width: 100ch;
  --breakout-max-width: 130ch;

  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

  display: grid;
  grid-template-columns: [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2), var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr)  [full-width-end];
}

/* base styles */

body {
  color: var(--foreground);
  background: var(--color-secondary);
  font-family: var(--font-secondary), sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 1.125rem;
  line-height: 1.6;
  margin: 0 auto;
}

h1 { font-size: clamp(2.8rem, 10vw, 4rem);  text-transform: uppercase; }
:is(h2, caption) { font-size: clamp(2rem, 9vw, 3rem); margin-bottom: 8rem; letter-spacing: 0.02em; text-transform: uppercase;}
h3 { font-size: 1.625rem; }

:is(h1, h2, h3, h4, caption, q) {
  font-family: var(--font-primary);
  font-weight: var(--fw-semi-bold);
  line-height: 1.1;
  max-width: 100%;
}

:is(p, li) {
  text-wrap: pretty;
}

ul li {
  list-style: square;
  padding: 0.2em;
  margin-left: 2em;
}

p {
  margin: 1em 0;
  margin: 1lh 0;
}

a {
  color: var(--color-links);
  text-decoration: underline;
  text-underline-offset: 4px;
  cursor: pointer;
  transition: color 300ms ease, font-weight 300ms ease;

  &:focus {
  outline: none;
  font-weight: var(--fw-bold);
  }
}

input, textarea, select, button {
  font-size: 1rem;
}

*:focus {
  outline: var(--focus-outline) ;
  border-radius: var(--focus-radius);
}

.section {
  padding: 10rem 0rem;
}

.glassmorphism {
  background: radial-gradient(
    circle at left center,
    rgba(255, 255, 255, 0.65) 0%,
    rgba(255, 255, 255, 0.4) 40%,
    rgba(255, 255, 255, 0) 100%
  );

  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(4px);
}

textarea, input {
  font-family: inherit;
}

summary {
  transition: color 300ms ease;

  &:hover {
  color: var(--color-secondary);
  }

  &:focus {
  outline: none;
  font-weight: var(--fw-bold);
  color: var(--color-secondary);
  }
}

.button {
  display: inline-block;
  text-decoration: none;
  cursor: pointer;  
  color: var(--color-default);
  font-family: Arial, Helvetica, sans-serif;
  font-weight: var(--fw-semi-bold);
  letter-spacing: 0.5px;
  text-align: center;  
  text-transform: uppercase;
  font-size: 1rem;
  padding: 1em 2em;
  border-radius: 12px;
  border: solid 2px var(--color-default); 
  background: linear-gradient(145deg, var(--color-accent), #C7A88C);
  transition: background-image 0.3s ease, outline 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
  box-shadow:
  0 2px 5px rgba(0, 0, 0, 0.1),
  inset 1px 1px 2px rgba(255,255,255,0.3);

  &:hover {
  background-image: linear-gradient(145deg, var(--color-accent-hover), #C3A184);
  transform: translateY(-2px);
  box-shadow:
  3px 6px #BFA38A,
  inset 0 0 0 transparent;

  /* box-shadow: 0 3px 6px #BFA38A,
    inset 0 0 0 transparent; */
}
  

  &:focus:not(:hover) {
    outline: solid 3px var(--color-secondary);
    outline-offset: 2px;

    background-image: linear-gradient(145deg, var(--color-accent-focus), var(--color-accent-focus)); 
  }
}

.highlight {
  font-weight: var(--fw-semi-bold);
  color: var(--color-secondary);
}

/* Applied to enhance accessibility for "read me" buttons. 
  This style is used on the span element that describes the action triggered when clicking the link. 
  The element remains in the DOM for screen readers but is visually hidden from the layout to maintain accessibility. */
.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  overflow: hidden;
}